/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
/**
 *
 * @author User
 */
public class combox extends javax.swing.JFrame {

   
    public combox() {
        initComponents();
        createAndDisplayBarChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        COMBO = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        COMBO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "groupe1", "groupe2", "groupe3", "groupe4" }));
        COMBO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COMBOActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(COMBO, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(COMBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void createAndDisplayBarChart() {
    // Récupérer le groupe sélectionné dans la combobox
    String selectedGroup = (String) COMBO.getSelectedItem();
    
    // Vérifier si un groupe est sélectionné
    if (selectedGroup != null) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        try {
            // Connexion à la base de données et exécution de la requête pour obtenir les données
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/matel", "root", "");
            String query = "SELECT NOM_V1, SUM(solde) AS total_solde FROM donnees WHERE groupe = ? GROUP BY NOM_V1";

            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1, selectedGroup);
            ResultSet rs = pstmt.executeQuery();

            // Parcours des résultats de la requête et ajout des données au dataset
            while (rs.next()) {
                String revendeur = rs.getString("NOM_V1").trim();
                double solde = rs.getDouble("total_solde");
                System.out.println("Revendeur: " + revendeur + ", Solde: " + solde);

                dataset.addValue(solde, "Solde", revendeur);
            }
               System.out.println("Contenu du dataset :");
        for (int i = 0; i < dataset.getRowCount(); i++) {
            Comparable rowKey = dataset.getRowKey(i);
            for (int j = 0; j < dataset.getColumnCount(); j++) {
                Comparable columnKey = dataset.getColumnKey(j);
                Number value = dataset.getValue(i, j);
                System.out.println("Row: " + rowKey + ", Column: " + columnKey + ", Value: " + value);
            }}

            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        // Création du graphique à barres
        JFreeChart barChart = ChartFactory.createBarChart(
                "" + selectedGroup,
                "Revendeur",
                "Solde",
                dataset
        );
             ChartPanel chartPanel = new ChartPanel(barChart);

        // Ajout du ChartPanel au panneau
        panel.removeAll(); // Supprime tous les composants du panneau
        panel.setLayout(new BorderLayout()); // Définit le layout du panneau
        panel.add(chartPanel, BorderLayout.CENTER); // Ajoute le ChartPanel au centre du panneau
        panel.revalidate();
        CategoryPlot plot = barChart.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();

        // Définition de la couleur des barres
        renderer.setSeriesPaint(0, Color.BLUE); 
        renderer.setMaximumBarWidth(0.05);

// Définition de la couleur des barres
       //
      
    }
}

    private void COMBOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMBOActionPerformed
      
    createAndDisplayBarChart();
   
    }//GEN-LAST:event_COMBOActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(combox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(combox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(combox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(combox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new combox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> COMBO;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
